////
/// Design Tokens
/// Autogenerated from tokens.json.
/// DO NOT EDIT!
////

@use "sass:list";
@use "sass:map";

$__token-values: (
  "color.black": (
    default: (var(--color-black)),
  ),
  "color.blue.10": (
    default: (var(--color-blue-10)),
  ),
  "color.blue.15": (
    default: (var(--color-blue-15)),
  ),
  "color.blue.20": (
    default: (var(--color-blue-20)),
  ),
  "color.blue.25": (
    default: (var(--color-blue-25)),
  ),
  "color.blue.30": (
    default: (var(--color-blue-30)),
  ),
  "color.blue.40": (
    default: (var(--color-blue-40)),
  ),
  "color.blue.50": (
    default: (var(--color-blue-50)),
  ),
  "color.blue.60": (
    default: (var(--color-blue-60)),
  ),
  "color.blue.70": (
    default: (var(--color-blue-70)),
  ),
  "color.blue.80": (
    default: (var(--color-blue-80)),
  ),
  "color.blue.85": (
    default: (var(--color-blue-85)),
  ),
  "color.blue.90": (
    default: (var(--color-blue-90)),
  ),
  "color.blue.95": (
    default: (var(--color-blue-95)),
  ),
  "color.blue.100": (
    default: (var(--color-blue-100)),
  ),
  "color.gray.10": (
    default: (var(--color-gray-10)),
  ),
  "color.gray.15": (
    default: (var(--color-gray-15)),
  ),
  "color.gray.20": (
    default: (var(--color-gray-20)),
  ),
  "color.gray.25": (
    default: (var(--color-gray-25)),
  ),
  "color.gray.30": (
    default: (var(--color-gray-30)),
  ),
  "color.gray.35": (
    default: (var(--color-gray-35)),
  ),
  "color.gray.40": (
    default: (var(--color-gray-40)),
  ),
  "color.gray.50": (
    default: (var(--color-gray-50)),
  ),
  "color.gray.60": (
    default: (var(--color-gray-60)),
  ),
  "color.gray.70": (
    default: (var(--color-gray-70)),
  ),
  "color.gray.80": (
    default: (var(--color-gray-80)),
  ),
  "color.gray.85": (
    default: (var(--color-gray-85)),
  ),
  "color.gray.90": (
    default: (var(--color-gray-90)),
  ),
  "color.gray.95": (
    default: (var(--color-gray-95)),
  ),
  "color.gray.100": (
    default: (var(--color-gray-100)),
  ),
  "color.green.10": (
    default: (var(--color-green-10)),
  ),
  "color.green.15": (
    default: (var(--color-green-15)),
  ),
  "color.green.20": (
    default: (var(--color-green-20)),
  ),
  "color.green.25": (
    default: (var(--color-green-25)),
  ),
  "color.green.30": (
    default: (var(--color-green-30)),
  ),
  "color.green.40": (
    default: (var(--color-green-40)),
  ),
  "color.green.50": (
    default: (var(--color-green-50)),
  ),
  "color.green.60": (
    default: (var(--color-green-60)),
  ),
  "color.green.70": (
    default: (var(--color-green-70)),
  ),
  "color.green.80": (
    default: (var(--color-green-80)),
  ),
  "color.green.85": (
    default: (var(--color-green-85)),
  ),
  "color.green.90": (
    default: (var(--color-green-90)),
  ),
  "color.green.95": (
    default: (var(--color-green-95)),
  ),
  "color.green.100": (
    default: (var(--color-green-100)),
  ),
  "color.red.10": (
    default: (var(--color-red-10)),
  ),
  "color.red.15": (
    default: (var(--color-red-15)),
  ),
  "color.red.20": (
    default: (var(--color-red-20)),
  ),
  "color.red.25": (
    default: (var(--color-red-25)),
  ),
  "color.red.30": (
    default: (var(--color-red-30)),
  ),
  "color.red.40": (
    default: (var(--color-red-40)),
  ),
  "color.red.50": (
    default: (var(--color-red-50)),
  ),
  "color.red.60": (
    default: (var(--color-red-60)),
  ),
  "color.red.70": (
    default: (var(--color-red-70)),
  ),
  "color.red.80": (
    default: (var(--color-red-80)),
  ),
  "color.red.85": (
    default: (var(--color-red-85)),
  ),
  "color.red.90": (
    default: (var(--color-red-90)),
  ),
  "color.red.95": (
    default: (var(--color-red-95)),
  ),
  "color.red.100": (
    default: (var(--color-red-100)),
  ),
  "color.ui.action.base": (
    default: (var(--color-ui-action-base)),
    "light": (var(--color-ui-action-base)),
    "dark": (var(--color-ui-action-base)),
  ),
  "color.ui.action.bg": (
    default: (var(--color-ui-action-bg)),
    "light": (var(--color-ui-action-bg)),
    "dark": (var(--color-ui-action-bg)),
  ),
  "color.ui.action.border": (
    default: (var(--color-ui-action-border)),
    "light": (var(--color-ui-action-border)),
    "dark": (var(--color-ui-action-border)),
  ),
  "color.ui.action.text": (
    default: (var(--color-ui-action-text)),
    "light": (var(--color-ui-action-text)),
    "dark": (var(--color-ui-action-text)),
  ),
  "color.ui.bg": (
    default: (var(--color-ui-bg)),
    "light": (var(--color-ui-bg)),
    "dark": (var(--color-ui-bg)),
  ),
  "color.ui.bg-offset": (
    default: (var(--color-ui-bg-offset)),
    "light": (var(--color-ui-bg-offset)),
    "dark": (var(--color-ui-bg-offset)),
  ),
  "color.ui.contrast.00": (
    default: (var(--color-ui-contrast-00)),
    "light": (var(--color-ui-contrast-00)),
    "dark": (var(--color-ui-contrast-00)),
  ),
  "color.ui.contrast.05": (
    default: (var(--color-ui-contrast-05)),
    "light": (var(--color-ui-contrast-05)),
    "dark": (var(--color-ui-contrast-05)),
  ),
  "color.ui.contrast.10": (
    default: (var(--color-ui-contrast-10)),
    "light": (var(--color-ui-contrast-10)),
    "dark": (var(--color-ui-contrast-10)),
  ),
  "color.ui.contrast.15": (
    default: (var(--color-ui-contrast-15)),
    "light": (var(--color-ui-contrast-15)),
    "dark": (var(--color-ui-contrast-15)),
  ),
  "color.ui.contrast.20": (
    default: (var(--color-ui-contrast-20)),
    "light": (var(--color-ui-contrast-20)),
    "dark": (var(--color-ui-contrast-20)),
  ),
  "color.ui.contrast.30": (
    default: (var(--color-ui-contrast-30)),
    "light": (var(--color-ui-contrast-30)),
    "dark": (var(--color-ui-contrast-30)),
  ),
  "color.ui.contrast.40": (
    default: (var(--color-ui-contrast-40)),
    "light": (var(--color-ui-contrast-40)),
    "dark": (var(--color-ui-contrast-40)),
  ),
  "color.ui.contrast.50": (
    default: (var(--color-ui-contrast-50)),
    "light": (var(--color-ui-contrast-50)),
    "dark": (var(--color-ui-contrast-50)),
  ),
  "color.ui.contrast.60": (
    default: (var(--color-ui-contrast-60)),
    "light": (var(--color-ui-contrast-60)),
    "dark": (var(--color-ui-contrast-60)),
  ),
  "color.ui.contrast.70": (
    default: (var(--color-ui-contrast-70)),
    "light": (var(--color-ui-contrast-70)),
    "dark": (var(--color-ui-contrast-70)),
  ),
  "color.ui.contrast.80": (
    default: (var(--color-ui-contrast-80)),
    "light": (var(--color-ui-contrast-80)),
    "dark": (var(--color-ui-contrast-80)),
  ),
  "color.ui.contrast.85": (
    default: (var(--color-ui-contrast-85)),
    "light": (var(--color-ui-contrast-85)),
    "dark": (var(--color-ui-contrast-85)),
  ),
  "color.ui.contrast.90": (
    default: (var(--color-ui-contrast-90)),
    "light": (var(--color-ui-contrast-90)),
    "dark": (var(--color-ui-contrast-90)),
  ),
  "color.ui.contrast.95": (
    default: (var(--color-ui-contrast-95)),
    "light": (var(--color-ui-contrast-95)),
    "dark": (var(--color-ui-contrast-95)),
  ),
  "color.ui.error.base": (
    default: (var(--color-ui-error-base)),
    "light": (var(--color-ui-error-base)),
    "dark": (var(--color-ui-error-base)),
  ),
  "color.ui.error.bg": (
    default: (var(--color-ui-error-bg)),
    "light": (var(--color-ui-error-bg)),
    "dark": (var(--color-ui-error-bg)),
  ),
  "color.ui.error.border": (
    default: (var(--color-ui-error-border)),
    "light": (var(--color-ui-error-border)),
    "dark": (var(--color-ui-error-border)),
  ),
  "color.ui.error.text": (
    default: (var(--color-ui-error-text)),
    "light": (var(--color-ui-error-text)),
    "dark": (var(--color-ui-error-text)),
  ),
  "color.ui.fg": (
    default: (var(--color-ui-fg)),
  ),
  "color.ui.fg-subdue": (
    default: (var(--color-ui-fg-subdue)),
  ),
  "color.ui.focus": (
    default: (var(--color-ui-focus)),
  ),
  "color.ui.success.base": (
    default: (var(--color-ui-success-base)),
    "light": (var(--color-ui-success-base)),
    "dark": (var(--color-ui-success-base)),
  ),
  "color.ui.success.bg": (
    default: (var(--color-ui-success-bg)),
    "light": (var(--color-ui-success-bg)),
    "dark": (var(--color-ui-success-bg)),
  ),
  "color.ui.success.border": (
    default: (var(--color-ui-success-border)),
    "light": (var(--color-ui-success-border)),
    "dark": (var(--color-ui-success-border)),
  ),
  "color.ui.success.text": (
    default: (var(--color-ui-success-text)),
    "light": (var(--color-ui-success-text)),
    "dark": (var(--color-ui-success-text)),
  ),
  "color.ui.warn.base": (
    default: (var(--color-ui-warn-base)),
    "light": (var(--color-ui-warn-base)),
    "dark": (var(--color-ui-warn-base)),
  ),
  "color.ui.warn.bg": (
    default: (var(--color-ui-warn-bg)),
    "light": (var(--color-ui-warn-bg)),
    "dark": (var(--color-ui-warn-bg)),
  ),
  "color.ui.warn.border": (
    default: (var(--color-ui-warn-border)),
    "light": (var(--color-ui-warn-border)),
    "dark": (var(--color-ui-warn-border)),
  ),
  "color.ui.warn.text": (
    default: (var(--color-ui-warn-text)),
    "light": (var(--color-ui-warn-text)),
    "dark": (var(--color-ui-warn-text)),
  ),
  "color.white": (
    default: (var(--color-white)),
  ),
  "color.yellow.70": (
    default: (var(--color-yellow-70)),
  ),
  "color.yellow.75": (
    default: (var(--color-yellow-75)),
  ),
  "color.yellow.80": (
    default: (var(--color-yellow-80)),
  ),
  "color.yellow.85": (
    default: (var(--color-yellow-85)),
  ),
  "color.yellow.90": (
    default: (var(--color-yellow-90)),
  ),
  "color.yellow.92": (
    default: (var(--color-yellow-92)),
  ),
  "color.yellow.95": (
    default: (var(--color-yellow-95)),
  ),
  "ease.circ-in": (
    default: (var(--ease-circ-in)),
  ),
  "ease.circ-in-out": (
    default: (var(--ease-circ-in-out)),
  ),
  "ease.circ-out": (
    default: (var(--ease-circ-out)),
  ),
  "ease.cubic-in": (
    default: (var(--ease-cubic-in)),
  ),
  "ease.cubic-in-out": (
    default: (var(--ease-cubic-in-out)),
  ),
  "ease.cubic-out": (
    default: (var(--ease-cubic-out)),
  ),
  "ease.linear": (
    default: (var(--ease-linear)),
  ),
  "layer.alert": (
    default: (var(--layer-alert)),
  ),
  "layer.base": (
    default: (var(--layer-base)),
  ),
  "layer.float": (
    default: (var(--layer-float)),
  ),
  "layer.focus": (
    default: (var(--layer-focus)),
  ),
  "layer.modal": (
    default: (var(--layer-modal)),
  ),
  "layer.nav": (
    default: (var(--layer-nav)),
  ),
  "layer.popover": (
    default: (var(--layer-popover)),
  ),
  "shadow.base": (
    default: (var(--shadow-base)),
  ),
  "size.l.gap": (
    default: (var(--size-l-gap)),
  ),
  "size.l.height": (
    default: (var(--size-l-height)),
  ),
  "size.l.padding": (
    default: (var(--size-l-padding)),
  ),
  "size.l.radius": (
    default: (var(--size-l-radius)),
  ),
  "size.l.textSize": (
    default: (var(--size-l-textSize)),
  ),
  "size.m.gap": (
    default: (var(--size-m-gap)),
  ),
  "size.m.height": (
    default: (var(--size-m-height)),
  ),
  "size.m.padding": (
    default: (var(--size-m-padding)),
  ),
  "size.m.radius": (
    default: (var(--size-m-radius)),
  ),
  "size.m.textSize": (
    default: (var(--size-m-textSize)),
  ),
  "size.s.gap": (
    default: (var(--size-s-gap)),
  ),
  "size.s.height": (
    default: (var(--size-s-height)),
  ),
  "size.s.padding": (
    default: (var(--size-s-padding)),
  ),
  "size.s.radius": (
    default: (var(--size-s-radius)),
  ),
  "size.s.textSize": (
    default: (var(--size-s-textSize)),
  ),
  "timing.deliberate": (
    default: (var(--timing-deliberate)),
  ),
  "timing.quick": (
    default: (var(--timing-quick)),
  ),
  "timing.slow": (
    default: (var(--timing-slow)),
  ),
  "transition.base": (
    default: (var(--transition-base)),
  ),
  "typography.base": (
    "__cobalt-error": "This is a typography mixin. Use `@include typography(\"typography.base\")` instead.",
  ),
  "typography.family.base": (
    default: (var(--typography-family-base)),
  ),
  "typography.family.heading": (
    default: (var(--typography-family-heading)),
  ),
  "typography.family.mono": (
    default: (var(--typography-family-mono)),
  ),
  "typography.footnote": (
    "__cobalt-error": "This is a typography mixin. Use `@include typography(\"typography.footnote\")` instead.",
  ),
  "typography.h1": (
    "__cobalt-error": "This is a typography mixin. Use `@include typography(\"typography.h1\")` instead.",
  ),
  "typography.h2": (
    "__cobalt-error": "This is a typography mixin. Use `@include typography(\"typography.h2\")` instead.",
  ),
  "typography.h3": (
    "__cobalt-error": "This is a typography mixin. Use `@include typography(\"typography.h3\")` instead.",
  ),
  "typography.label": (
    "__cobalt-error": "This is a typography mixin. Use `@include typography(\"typography.label\")` instead.",
  ),
  "typography.mono": (
    "__cobalt-error": "This is a typography mixin. Use `@include typography(\"typography.mono\")` instead.",
  ),
);

$__token-typography-mixins: (
  "typography.base": (
    default: (
      "font-family": (var(--typography-base-font-family)),
      "font-size": (var(--typography-base-font-size)),
      "font-style": (var(--typography-base-font-style)),
      "font-variation-settings": (var(--typography-base-font-variation-settings)),
      "font-weight": (var(--typography-base-font-weight)),
      "letter-spacing": (var(--typography-base-letter-spacing)),
      "line-height": (var(--typography-base-line-height)),
      "text-transform": (var(--typography-base-text-transform)),
    ),
  ),
  "typography.footnote": (
    default: (
      "font-family": (var(--typography-footnote-font-family)),
      "font-size": (var(--typography-footnote-font-size)),
      "font-variation-settings": (var(--typography-footnote-font-variation-settings)),
      "font-weight": (var(--typography-footnote-font-weight)),
      "letter-spacing": (var(--typography-footnote-letter-spacing)),
      "line-height": (var(--typography-footnote-line-height)),
      "text-transform": (var(--typography-footnote-text-transform)),
    ),
  ),
  "typography.h1": (
    default: (
      "font-family": (var(--typography-h1-font-family)),
      "font-size": (var(--typography-h1-font-size)),
      "font-variation-settings": (var(--typography-h1-font-variation-settings)),
      "font-weight": (var(--typography-h1-font-weight)),
      "letter-spacing": (var(--typography-h1-letter-spacing)),
      "line-height": (var(--typography-h1-line-height)),
      "text-transform": (var(--typography-h1-text-transform)),
    ),
  ),
  "typography.h2": (
    default: (
      "font-family": (var(--typography-h2-font-family)),
      "font-size": (var(--typography-h2-font-size)),
      "font-variation-settings": (var(--typography-h2-font-variation-settings)),
      "font-weight": (var(--typography-h2-font-weight)),
      "letter-spacing": (var(--typography-h2-letter-spacing)),
      "line-height": (var(--typography-h2-line-height)),
      "text-transform": (var(--typography-h2-text-transform)),
    ),
  ),
  "typography.h3": (
    default: (
      "font-family": (var(--typography-h3-font-family)),
      "font-size": (var(--typography-h3-font-size)),
      "font-variation-settings": (var(--typography-h3-font-variation-settings)),
      "font-weight": (var(--typography-h3-font-weight)),
      "letter-spacing": (var(--typography-h3-letter-spacing)),
      "line-height": (var(--typography-h3-line-height)),
      "text-transform": (var(--typography-h3-text-transform)),
    ),
  ),
  "typography.label": (
    default: (
      "font-family": (var(--typography-label-font-family)),
      "font-size": (var(--typography-label-font-size)),
      "font-variation-settings": (var(--typography-label-font-variation-settings)),
      "font-weight": (var(--typography-label-font-weight)),
      "letter-spacing": (var(--typography-label-letter-spacing)),
      "line-height": (var(--typography-label-line-height)),
      "text-transform": (var(--typography-label-text-transform)),
    ),
  ),
  "typography.mono": (
    default: (
      "font-family": (var(--typography-mono-font-family)),
      "font-size": (var(--typography-mono-font-size)),
      "font-style": (var(--typography-mono-font-style)),
      "font-variation-settings": (var(--typography-mono-font-variation-settings)),
      "font-weight": (var(--typography-mono-font-weight)),
      "letter-spacing": (var(--typography-mono-letter-spacing)),
      "line-height": (var(--typography-mono-line-height)),
      "text-transform": (var(--typography-mono-text-transform)),
    ),
  ),
);

@function token($tokenName, $modeName: default) {
  @if map.has-key($__token-values, $tokenName) == false {
    @error "No token named \"#{$tokenName}\"";
  }
  $_token: map.get($__token-values, $tokenName);
  @if map.has-key($_token, "__cobalt-error") {
    @error map.get($_token, "__cobalt-error");
  }
  @if map.has-key($_token, $modeName) {
    @return map.get($_token, $modeName);
  } @else {
    @return map.get($_token, default);
  }
}

@function listModes($tokenName) {
  @if map.has-key($__token-values, $tokenName) == false {
    @error "No token named \"#{$tokenName}\"";
  }
  $_modes: ();
  @each $k in map.get($__token-values, $tokenName) {
    @if $k != "default" {
      $_modes: list.append($_modes, $k);
    }
  }
  @return $_modes;
}

@mixin typography($tokenName, $modeName: default) {
  @if map.has-key($__token-typography-mixins, $tokenName) == false {
    @error "No typography mixin named \"#{$tokenName}\"";
  }
  $_mixin: map.get($__token-typography-mixins, $tokenName);
  $_properties: map.get($_mixin, default);
  @if map.has-key($_mixin, $modeName) {
    $_properties: map.get($_mixin, $modeName);
  }
  @each $_property, $_value in $_properties {
    #{$_property}: #{$_value};
  }
}
